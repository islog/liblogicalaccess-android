standalone_toolchain=/opt/x86_toolchain_21
target_host=i686-linux-android
cc_compiler=clang
cxx_compiler=clang++

[settings]
os=Android
os.api_level=21
os_build=Linux
arch_build=x86_64
compiler=clang
compiler.version=7.0
compiler.libcxx=libc++
build_type=Release
cppstd=14
arch=x86

[options]
OpenSSL:no_asm=True
OpenSSL:shared=False
boost:shared=False

LogicalAccess:LLA_BUILD_PKCS=False
LogicalAccess:LLA_BUILD_IKS=False
[build_requires]

[env]
CONAN_CMAKE_FIND_ROOT_PATH=$standalone_toolchain/sysroot
PATH=[$standalone_toolchain/bin]
CHOST=$target_host
AR=$target_host-ar
AS=$target_host-as
RANLIB=$target_host-ranlib
CC=$target_host-$cc_compiler
CXX=$target_host-$cxx_compiler
LD=$target_host-ld
STRIP=$target_host-strip

CFLAGS="-D__ANDROID_API__=21 -I$standalone_toolchain/include/c++/4.9.x/"
CXXFLAGS="-D__ANDROID_API__=21 -I$standalone_toolchain/include/c++/4.9.x/"
LDFLAGS="-Wl,/opt/android-ndk/android-ndk-r18b/sources/cxx-stl/llvm-libc++/libs/x86/libc++.so.21"

# To work around an issue on clang7 with std::string_view and experimental
boost:CXXFLAGS="-D__ANDROID_API__=21 -I$standalone_toolchain/include/c++/4.9.x/ -DBOOST_ASIO_HAS_STD_STRING_VIEW=1"

## Still issue with -mandroid being passed to clang.
## Can be fixed by editing conanfile.
OpenSSL:CFLAGS="-D__ANDROID_API__=21 -I$standalone_toolchain/include/c++/4.9.x --target=i686-linux-android  -march=i686"
